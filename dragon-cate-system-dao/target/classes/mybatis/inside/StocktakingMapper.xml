<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="titan.wms.common.dao.mapper.inside.StocktakingMapper" >
    <resultMap id="BaseResult" type="StocktakingDO" >
        <result column="id" property="id"/>
        <result column="code" property="code"/>
        <result column="name" property="name"/>
        <result column="seq" property="seq"/>
        <result column="type" property="type"/>
        <result column="is_stocktaking_expired" property="stocktakingExpired"/>
        <result column="create_type" property="createType"/>
        <result column="operator_id" property="operatorId"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="closed_time" property="closedTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="TableName">
        inside_stocktaking
    </sql>

    <sql id="BaseColumn" >
        `code`,
        `name`,
        `seq`,
        `type`,
        `is_stocktaking_expired`,
        `create_type`,
        `status`,
        `operator_id`,
        `create_time`,
        `closed_time`,
        `update_time`
    </sql>

    <insert id="add" parameterType="StocktakingDO" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
          <include refid="TableName" /> (<include refid="BaseColumn" />)
        VALUES(
          #{code},
          #{name},
          #{seq},
          #{type},
          #{stocktakingExpired},
          #{createType},
          #{status},
          #{operatorId},
          NOW(),
          #{closedTime},
          NOW()
        )
    </insert>

    <select id="getById" resultMap="BaseResult">
        SELECT
          id, <include refid="BaseColumn" />
        FROM
          <include refid="TableName"/>
        WHERE
          id = #{id} <if test="needLock == true"> for update</if>
    </select>

    <select id="getByCode" resultMap="BaseResult">
        SELECT
        id, <include refid="BaseColumn" />
        FROM
        <include refid="TableName"/>
        WHERE code = #{code}
    </select>

    <delete id="deleteById">
        DELETE
        FROM
          <include refid="TableName"/>
        WHERE
          id = #{id}
    </delete>

    <select id="getByName" resultMap="BaseResult">
        SELECT * from <include refid="TableName"/> WHERE name = #{name}
    </select>

    <update id="updateStatus">
        UPDATE  <include refid="TableName"/> SET status = #{status} where id = #{id}
    </update>

    <select id="pageQuery" resultMap="BaseResult">
        SELECT * FROM  <include refid="TableName"/>
        <where>
            <if test="queryVO.name != null or queryVO.name != ''">
                name like contact('%',queryVO.name,'%')
            </if>
            <if test="queryVO.type != null">
                and type = #{queryVO.type}
            </if>
            <if test="queryVO.status != null">
                and status = #{queryVO.status}
            </if>
            <if test="queryVO.startTime != null">
                <![CDATA[ and create_time >= #{queryVO.startTime} ]]>
            </if>
            <if test="queryVO.endTime != null">
                <![CDATA[ and create_time <= #{queryVO.endTime} ]]>
            </if>
        </where>
        order by id desc <if test="limit > 0">limit #{offset},#{limit}</if>
    </select>

    <select id="pageCount" resultType="java.lang.Integer">
        SELECT count(*) FROM  <include refid="TableName"/>
        <where>
            <if test="queryVO.name != null or queryVO.name != ''">
                name like contact('%',queryVO.name,'%')
            </if>
            <if test="queryVO.type != null">
                and type = #{queryVO.type}
            </if>
            <if test="queryVO.status != null">
                and status = #{queryVO.status}
            </if>
            <if test="queryVO.startTime != null">
                <![CDATA[ and create_time >= #{queryVO.startTime} ]]>
            </if>
            <if test="queryVO.endTime != null">
                <![CDATA[ and create_time <= #{queryVO.endTime} ]]>
            </if>
        </where>
    </select>
</mapper>