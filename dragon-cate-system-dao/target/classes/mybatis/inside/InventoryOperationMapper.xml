<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "classpath:dtd/mybatis-3-mapper.dtd" >
<mapper namespace="titan.wms.common.dao.mapper.inside.InventoryOperationMapper">

	<!--auto generated Code-->
	<resultMap id="AllColumnMap" type="titan.wms.common.dao.meta.inside.InventoryDO">
		<result column="id" property="id"/>
		<result column="location_code" property="locationCode"/>
		<result column="sku_code" property="skuCode"/>
		<result column="attribute_id" property="attributeId"/>
		<result column="container_code" property="containerCode"/>
		<result column="client_code" property="clientCode"/>
		<result column="pallet_no" property="palletNo"/>
		<result column="pallet_seq" property="palletSeq"/>
		<result column="on_hand_count" property="onHandCount"/>
		<result column="allocated_count" property="allocatedCount"/>
		<result column="frozen_count" property="frozenCount"/>
		<result column="operator_id" property="operatorId"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
	</resultMap>

	<sql id="TABLE_NAME">
		`inside_inventory`
	</sql>

	<sql id="INSERT_ALL_COLUMNS">
		`location_code`,
		`sku_code`,
		`attribute_id`,
		`container_code`,
		`client_code`,
		`pallet_no`,
		`pallet_seq`,
		`on_hand_count`,
		`allocated_count`,
		`frozen_count`,
		`operator_id`,
		`create_time`,
		`update_time`
	</sql>

	<sql id="SELECT_ALL_COLUMNS">
		`id`,
		<include refid="INSERT_ALL_COLUMNS"/>
	</sql>

	<insert id="insert" parameterType="titan.wms.common.dao.meta.inside.InventoryDO" useGeneratedKeys="true" keyProperty="id">
		insert into
		<include refid="TABLE_NAME" />
		(
		<include refid="INSERT_ALL_COLUMNS"/>
		)
		values (
		#{locationCode},
		#{skuCode},
		#{attributeId},
		#{containerCode},
		#{clientCode},
		#{palletNo},
		#{palletSeq},
		#{onHandCount},
		#{allocatedCount},
		#{frozenCount},
		#{operatorId},
		now(),
		now()
		)
	</insert>

	<delete id="delete">
		delete from <include refid="TABLE_NAME" />
		where id=#{id}
	</delete>

	<select id="findByLocation" resultMap="AllColumnMap">
		select <include refid="SELECT_ALL_COLUMNS"/>
		from <include refid="TABLE_NAME" />
		where location_code = #{locationCode}
	</select>

	<select id="getByKeyForUpdate" resultMap="AllColumnMap">
		select <include refid="SELECT_ALL_COLUMNS"/>
		from <include refid="TABLE_NAME" />
		where location_code = #{locationCode}
		and sku_code = #{skuCode}
		and container_code = #{containerCode}
		and attribute_id = #{attributeId}
		and client_code = #{clientCode}
		for update
	</select>

	<select id="getByIdForUpdate" resultMap="AllColumnMap">
		select <include refid="SELECT_ALL_COLUMNS"/>
		from <include refid="TABLE_NAME" />
		where id = #{id}
		for update
	</select>

	<update id="addOnHandCount">
		update <include refid="TABLE_NAME" />
		set on_hand_count = on_hand_count + #{count}
		where id = #{id}
	</update>

	<update id="addAllocatedCount">
		update <include refid="TABLE_NAME" />
		set allocated_count = allocated_count + #{count}
		where id = #{id}
	</update>

	<update id="addFrozenCount">
		update <include refid="TABLE_NAME" />
		set frozen_count = frozen_count + #{count}
		where id = #{id}
	</update>

</mapper>