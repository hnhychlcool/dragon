<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "classpath:dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="titan.wms.common.dao.mapper.common.AsyncTaskMapper">

	<resultMap id="asyncTaskMap" type="AsyncTaskDO">
		<id column="id" property="id" jdbcType="DECIMAL" />
		<result column="task_name" property="taskName" />
		<result column="bean_name" property="beanName" />
		<result column="method_name" property="methodName" />
		<result column="method_args" property="methodArgs" />
		<result column="method_args_types" property="methodArgsTypes" />
		<result column="timeout" property="timeout" />
		<result column="expire_time" property="expireTime" />
		<result column="next_time" property="nextTime" />
		<result column="create_time" property="createTime" />
		<result column="succ" property="succ" />
		<result column="env" property="env" />

	</resultMap>
	<sql id="TABLE_NAME">
		common_async_task
	</sql>
	<select id="getById" resultMap="asyncTaskMap">
		select * from <include refid="TABLE_NAME" /> where id=#{id}
	</select>
	<select id="getByTaskName" resultMap="asyncTaskMap">
		select * from <include refid="TABLE_NAME" /> where task_name=#{taskName} and env=#{env}
	</select>
	<insert id="insertTask" parameterType="AsyncTaskDO" useGeneratedKeys="true" keyProperty="id">
		insert into
		<include refid="TABLE_NAME" />
		(
		task_name,bean_name,method_name,method_args,method_args_types,
		timeout,expire_time,next_time,create_time,succ,env
		)
		values
		(
		#{taskName},#{beanName},#{methodName},#{methodArgs},#{methodArgsTypes},
		#{timeout},#{expireTime},#{nextTime},now(),#{succ},#{env}
		)
	</insert>
	<update id="updateTask" parameterType="AsyncTaskDO">
		update <include refid="TABLE_NAME" /> set 
		bean_name=#{beanName},method_name=#{methodName},method_args=#{methodArgs},method_args_types=#{methodArgsTypes},
		timeout=#{timeout},expire_time=#{expireTime},next_time=#{nextTime},succ=#{succ},env=#{env}
		where id=#{id}		
	</update>
	<select id="listTaskToExcute" resultMap="asyncTaskMap">
		select * from <include refid="TABLE_NAME" /> 
		<![CDATA[
		where 
		succ=false 
		and expire_time > #{expireTime} 
		and next_time <=#{nextTime}
		limit 1000
		]]>
	</select>
	<delete id="deleteSucc">
		delete from <include refid="TABLE_NAME" />  
		<![CDATA[
		where expire_time <= #{time}
		]]>
	</delete>	
	<delete id="deleteById">
		delete from <include refid="TABLE_NAME" /> 
		where id=#{id}
	</delete>
</mapper>