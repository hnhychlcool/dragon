<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="titan.wms.common.dao.mapper.basicInfo.PackingMaterialParseRuleMapper" >
    <resultMap id="BaseResult" type="PackingMaterialParseRuleDO" >
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="priority" property="priority"/>
        <result column="remark" property="remark"/>
        <result column="begin_pos" property="beginPos"/>
        <result column="end_pos" property="endPos"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="TableName">
        outbound_packing_material_parse_rule
    </sql>

    <sql id="BaseColumn" >
        `name`,
        `priority`,
        `remark`,
        `begin_pos`,
        `end_pos`,
        `create_time`,
        `update_time`
    </sql>

    <select id="listByName" resultMap="BaseResult">
        SELECT
          `id`,
          `name`,
          `priority`,
          `remark`
        FROM
          <include refid="TableName"/>
        WHERE 1 = 1
        <if test="name != null and name != ''">
            AND `name` LIKE CONCAT('%', #{name}, '%')
        </if>
    </select>

    <insert id="insert" parameterType="PackingMaterialParseRuleDO" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
          <include refid="TableName" /> (<include refid="BaseColumn" />)
        VALUES(
          #{name},
          #{priority},
          #{remark},
          #{beginPos},
          #{endPos},
          NOW(),
          NOW()
        )
    </insert>

    <update id="update" parameterType="PackingMaterialParseRuleDO">
        UPDATE
          <include refid="TableName" />
        <set>
            <if test="name != null and name !=''">
                `name` = #{name},
            </if>
            `priority` = #{priority},
            <if test="remark != null and remark !=''">
                `remark` = #{remark},
            </if>
            `begin_pos` = #{beginPos},
            `end_pos` = #{endPos},
            `update_time` = NOW(),
        </set>
    </update>

    <select id="getById" resultMap="BaseResult">
        SELECT
          id, <include refid="BaseColumn" />
        FROM
          <include refid="TableName"/>
        WHERE
          id = #{id}
    </select>

    <select id="getByPriority" resultMap="BaseResult">
        SELECT
          id, <include refid="BaseColumn" />
        FROM
          <include refid="TableName"/>
        WHERE
          priority = #{priority}
    </select>

    <delete id="deleteById">
        DELETE
        FROM
          <include refid="TableName"/>
        WHERE
          id = #{id}
    </delete>

    <delete id="batchDelete">
        DELETE
        FROM
          <include refid="TableName"/>
        WHERE id IN
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
          #{id}
        </foreach>
    </delete>
</mapper>