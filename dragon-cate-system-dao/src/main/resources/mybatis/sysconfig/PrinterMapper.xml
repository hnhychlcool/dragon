<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="titan.wms.common.dao.mapper.sysconfig.PrinterMapper" >
    <resultMap id="BaseResult" type="PrinterDO" >
        <result column="id" property="id"/>
        <result column="alias" property="alias"/>
        <result column="type" property="type"/>
        <result column="ip_address" property="ipAddress"/>
        <result column="name" property="name"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <sql id="TableName">
        basic_printer
    </sql>

    <sql id="BaseColumn" >
        `alias`,
        `type`,
        `ip_address`,
        `name`,
        `update_time`,
        `create_time`
    </sql>

    <select id="listByCondition" resultMap="BaseResult">
        SELECT
          `id`,
          `alias`,
          `type`,
          `ip_address`,
          `name`
        FROM
          <include refid="TableName" />
        WHERE 1=1
        <if test="condition.alias != null and condition.alias !=''">
            AND `alias` LIKE CONCAT('%', #{condition.alias}, '%')
        </if>
        <if test="condition.type != null">
            AND `type` = #{condition.type}
        </if>
    </select>

    <select id="listByType" resultMap="BaseResult">
        SELECT
        id, <include refid="BaseColumn" />
        FROM
        <include refid="TableName"/>
        WHERE
        `type` = #{type}
    </select>

    <insert id="insert" parameterType="PrinterDO" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
          <include refid="TableName" /> (<include refid="BaseColumn" />)
        VALUES(
          #{alias},
          #{type},
          #{ipAddress},
          #{name},
          NOW(),
          NOW()
        )
    </insert>

    <update id="update">
        UPDATE
          <include refid="TableName" />
        <set>
          `alias` = #{alias},
          `type` = #{type},
          `ip_address` = #{ipAddress},
          `name` = #{name},
          `update_time` = NOW(),
        </set>
        WHERE
          id = #{id}
    </update>

    <select id="getById" resultMap="BaseResult">
        SELECT
          id, <include refid="BaseColumn" />
        FROM
          <include refid="TableName"/>
        WHERE
          id = #{id}
    </select>

    <select id="getByAlias" resultMap="BaseResult">
        SELECT
          id, <include refid="BaseColumn" />
        FROM
          <include refid="TableName"/>
        WHERE
          `alias` = #{alias}
    </select>

    <delete id="deleteById">
        DELETE
        FROM
          <include refid="TableName"/>
        WHERE
          id = #{id}
    </delete>

    <delete id="batchDelete">
        DELETE
        FROM
          <include refid="TableName"/>
        WHERE id IN
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
          #{id}
        </foreach>
    </delete>
</mapper>